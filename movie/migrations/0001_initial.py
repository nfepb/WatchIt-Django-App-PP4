# Generated by Django 3.2.16 on 2022-11-23 18:03

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('genre_image', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('director', models.CharField(max_length=200)),
                ('year_released', models.DateField()),
                ('synopsis', models.TextField()),
                ('movie_poster', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
                ('movie_approved', models.BooleanField(default=False)),
                ('movie_created_on', models.DateTimeField(auto_now_add=True)),
                ('movie_updated_on', models.DateTimeField(auto_now=True)),
                ('in_watchlists', models.ManyToManyField(blank=True, related_name='in_watchlists', to=settings.AUTH_USER_MODEL)),
                ('movie_genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movie_genre', to='movie.genre')),
            ],
            options={
                'ordering': ['-movie_created_on'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_status', models.IntegerField(choices=[(0, 'Not yet watched'), (1, 'Watched')], default=0)),
                ('added_on', models.DateField(auto_now_add=True)),
                ('watchlistItem_movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_watchlist', to='movie.movie')),
                ('watchlistItem_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_on'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('review_created_on', models.DateTimeField(auto_now_add=True)),
                ('review_updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='review_likes', to=settings.AUTH_USER_MODEL)),
                ('reviewed_movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='movie.movie')),
            ],
            options={
                'ordering': ['-review_created_on', '-review_updated_on'],
            },
        ),
    ]
